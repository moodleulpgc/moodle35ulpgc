<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$system$/SQL Prototype and samples (Experimental)</text>

    </category>
  </question>

<!-- question: 17217  -->
  <question type="coderunner">
    <name>
      <text>PROTOTYPE_sql</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>An <b>experimental</b> SQL question type, using sqlite3, run from Python3. sqlite3 must be installed on the Jobe server for this question type.</p><p>The working directory is searched for files with an extension '.db'. If there is only one such file, it is used as the sqlite3 database for all tests. Multiple .db files currently issues an error message; a possible extension is to use different db files for each test, e.g. in sorted order.</p><p>For each test, an sqlite3 command script of the form</p><pre>.mode column<br>.headers on<br>&lt;code in extra&gt;<br>&lt;student answer&gt;<br>&lt;testcode&gt;</pre><p>is run.</p><p>A fresh copy of the db file is used for each test case.&nbsp;</p><p>A template parameter <i>columnwidths</i>&nbsp;can be used to set the report column widths. By default sqlite3 sets each column width to be the maximum of three numbers: 10, the width of the header, and the width of the first row of data. A template string like</p><pre><code>{"columnwidths": [10, 50, 10, 5]}}
</code></pre><code>
<p>will instead use column widths of 10, 50, 10 and 5 for the first four columns.</p></code>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>sql</coderunnertype>
    <prototypetype>2</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace>1</useace>
    <resultcolumns></resultcolumns>
    <template><![CDATA[import subprocess, os, shutil

# Use Twig to get students answer and the columnwidth template parameter
student_answer = """{{ STUDENT_ANSWER | e('py') }}""".rstrip()
column_widths = []
{% for width in QUESTION.parameters.columnwidths %}
column_widths.append({{width}})
{% endfor %}

if not student_answer.endswith(';'):
    student_answer = student_answer + ';'
db_files = [fname for fname in os.listdir() if fname.endswith('.db')]
if len(db_files) == 0:
    raise Exception("No DB files found!")
elif len(db_files) == 1:
    db_working = db_files[0][:-3]  # Strip .db extension
else:
    raise Exception("Multiple DB files not implemented yet, sorry!")

SEPARATOR = "#<ab@17943918#@>#"
controls = [".mode column", ".headers on"]
if column_widths: # Add column width specifiers if given
    controls.append(".width " + ' '.join(str(width) for width in column_widths))
prelude = '\n'.join(controls) + '\n'

{% for TEST in TESTCASES %}
shutil.copyfile(db_files[0], db_working)  # Copy clean writeable db file
testcode = """{{ TEST.testcode | e('py') }}"""
extra = """{{ TEST.extra | e('py') }}"""
code_to_run = '\n'.join([prelude, extra, student_answer, testcode])
with open('commands', 'w') as sqlite_commands:
    sqlite_commands.write(code_to_run)
    
with open('commands') as cmd_input:
    text_input = cmd_input.read()
    try:
        output = subprocess.check_output(['sqlite3', db_working], input=text_input,
                 universal_newlines=True)
        print(output)
    except Exception as e:
        raise Exception("sqlite3 error: " + str(e))
        
{% if not loop.last %}
print(SEPARATOR)
{% endif %}
{% endfor %}]]></template>
    <iscombinatortemplate>1</iscombinatortemplate>
    <allowmultiplestdins>0</allowmultiplestdins>
    <answer></answer>
    <validateonsave>0</validateonsave>
    <testsplitterre><![CDATA[|#<ab@17943918#@>#\n|ms]]></testsplitterre>
    <language>python3</language>
    <acelang>sql</acelang>
    <sandbox></sandbox>
    <grader>EqualityGrader</grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb>500</memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <testcases>
    </testcases>
  </question>

<!-- question: 17218  -->
  <question type="coderunner">
    <name>
      <text>Simple join test</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Given a database with (at least) two tables: <i>customers</i>&nbsp;and <i>orders </i>as shown below, write an SQL query that returns the order_num, order amount and customer name for all orders between $500 and $2000 inclusive, ordered by order_num.</p>
<h2>First 5 rows of <i>customers</i> table, ordered by id</h2>
<pre>id      name             city          grade   salesperson_id
------  ---------------  ------------  ------  --------------
3001    Brad Guzan       London        100     5005          
3002    Nick Rimando     New York      100     5001          
3003    Jozy Altidore    Moscow        200     5007          
3004    Fabian Johns     Paris         300     5006          
3005    Graham Zusi      California    200     5002 </pre>
<h2>First 5 rows of <i>orders</i> table ordered by order_num</h2>
<pre>order_num   amount     date        customer_id  saleperson_id
----------  ---------  ----------  -----------  -------------
70001       150.5      2012-10-05  3005         5002         
70002       65.26      2012-10-05  3002         5001         
70003       2480.4     2012-10-10  3009         5003         
70004       110.5      2012-08-17  3009         5003         
70005       2400.6     2012-07-27  3007         5001 
</pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>sql</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace>1</useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[select order_num, amount, name
from customers join orders on customer_id = customers.id
where amount >= 500 and amount <= 2000
order by order_num]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams><![CDATA[{"columnwidths": [0, 0, 15]}]]></templateparams>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>-- Testing with original db</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>order_num   amount      name
----------  ----------  ---------------
70007       948.5       Graham Zusi
70010       1983.43     Fabian Johns</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>-- Testing with extra rows</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>order_num   amount      name
----------  ----------  ---------------
69007       500.0       Graham Zusi
70007       948.5       Graham Zusi
70010       1983.43     Fabian Johns
70014       2000.0      Jozy Altidore</text>
      </expected>
      <extra>
                <text>insert into orders values (69007,500,2011-12-31, 3005, 5002);
insert into orders values (70014,2000,2012-12-31, 3003, 5001);</text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
<file name="q1.db" path="/" encoding="base64"></file>
    </testcases>
  </question>

<!-- question: 17219  -->
  <question type="coderunner">
    <name>
      <text>Simple select</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Given a database with (at least) a table&nbsp;<i>customers</i><i>&nbsp;</i>as shown below, write an SQL query that returns the name, city and grade of all customers who live in London or Paris, in ascending order of name.</p><p><h2>First 5 rows of&nbsp;<i>customers</i>&nbsp;table, ordered by id</h2><pre>id      name             city          grade   salesperson_id
------  ---------------  ------------  ------  --------------
3001    Brad Guzan       London        100     5005          
3002    Nick Rimando     New York      100     5001          
3003    Jozy Altidore    Moscow        200     5007          
3004    Fabian Johns     Paris         300     5006          
3005    Graham Zusi      California    200     5002 </pre><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>sql</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace>1</useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer>select name, city, grade
from customers
where city = 'London' or city = 'Paris'
order by name</answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams><![CDATA[{"columnwidths": [15, 10, 5]}]]></templateparams>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>-- Testing with original db</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>name             city        grade
---------------  ----------  -----
Brad Guzan       London      100
Fabian Johns     Paris       300
Julian Green     London      300</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>-- Testing with extra rows</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>name             city        grade
---------------  ----------  -----
Angus McGee      Paris       500
Brad Guzan       London      100
Fabian Johns     Paris       300
Julian Green     London      300</text>
      </expected>
      <extra>
                <text>insert into customers values (2999, 'Angus McGee', 'Paris', 500, 6001);</text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
<file name="q1.db" path="/" encoding="base64"></file>
    </testcases>
  </question>

</quiz>