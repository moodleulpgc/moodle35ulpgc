{"version":3,"sources":["../src/authorform.js"],"names":["define","$","ui","JSON_TO_FORM_MAP","template","iscombinatortemplate","value","cputimelimitsecs","memlimitmb","sandbox","sandboxparams","testsplitterre","splitter","replace","allowmultiplestdins","grader","resultcolumns","language","acelang","uiplugin","initEditForm","strings","typeCombo","globalextra","useace","customise","isCombinator","testSplitterRe","allowMultipleStdins","customisationFieldSet","advancedCustomisation","isCustomised","prop","prototypeType","preloadHdr","typeName","courseId","questiontypeHelpDiv","precheck","testtypedivs","missingPrototype","setUi","taId","uiname","ta","document","getElementById","lang","currentLang","attr","paramsJson","params","uiWrapper","val","JSON","parse","err","toLowerCase","preferredAceLang","data","InterfaceWrapper","loadUi","setUis","setCustomisationVisibility","isVisible","display","css","enableTemplateSupportFields","isCombinatorEnabled","copyFieldsFromQuestionType","newType","response","formspecifier","attrval","filter","key","length","html","detailsHtml","questiontext","reportError","questionType","error","errorMessage","window","alert","getString","title","resultHtml","langs","i","indexOf","split","endsWith","substr","loadCustomisationFields","children","text","getJSON","M","cfg","wwwroot","qtype","courseid","sesskey","outcome","success","fail","set_testtype_visibilities","show","hide","check_ace_lang","check_template_lang","missingPrototypeMessage","messagePara","append","on","confirm","isTurningOn","observer","MutationObserver","observe","get","click","gotPre","prev","testCaseId","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling UI actions in the question authoring form.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'qtype_coderunner/userinterfacewrapper'], function($, ui) {\n\n    // Define a mapping from the fields of the JSON object returned by an AJAX\n    // 'get question type' request to the form elements. Keys are JSON field\n    // names, values are a 3- or 4-element array of: a jQuery form element selector;\n    // the element property to be set; a default value if the JSON field is\n    // empty and an optional filter function to apply to the field value before\n    // setting the property with it.\n    var JSON_TO_FORM_MAP = {\n        template:            ['#id_template', 'value', ''],\n        iscombinatortemplate:['#id_iscombinatortemplate', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],  // Need nice clean boolean for 'checked' attribute.\n        cputimelimitsecs:    ['#id_cputimelimitsecs', 'value', ''],\n        memlimitmb:          ['#id_memlimitmb', 'value', ''],\n        sandbox:             ['#id_sandbox', 'value', 'DEFAULT'],\n        sandboxparams:       ['#id_sandboxparams', 'value', ''],\n        testsplitterre:      ['#id_testsplitterre', 'value', '',\n                                function (splitter) {\n                                    return splitter.replace('\\n', '\\\\n');\n                                }],\n        allowmultiplestdins: ['#id_allowmultiplestdins', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],\n        grader:              ['#id_grader', 'value', 'EqualityGrader'],\n        resultcolumns:       ['#id_resultcolumns', 'value', ''],\n        language:            ['#id_language', 'value', ''],\n        acelang:             ['#id_acelang', 'value', ''],\n        uiplugin:            ['#id_uiplugin', 'value', 'ace']\n    };\n\n    // Set up the author edit form UI plugins and event handlers.\n    // The strings parameter is an associative array containing a subset of\n    // the strings extracted from lang/xx/qtype_coderunner.php.\n    // The template parameters and Ace language are passed to each\n    // text area from PHP by setting its data-params and\n    // data-lang attributes.\n    function initEditForm(strings) {\n        var typeCombo = $('#id_coderunnertype'),\n            template = $('#id_template'),\n            globalextra = $('#id_globalextra'),\n            useace = $('#id_useace'),\n            language = $('#id_language'),\n            acelang = $('#id_acelang'),\n            customise = $('#id_customise'),\n            isCombinator = $('#id_iscombinatortemplate'),\n            testSplitterRe = $('#id_testsplitterre'),\n            allowMultipleStdins = $('#id_allowmultiplestdins'),\n            customisationFieldSet = $('#id_customisationheader'),\n            advancedCustomisation = $('#id_advancedcustomisationheader'),\n            isCustomised = customise.prop('checked'),\n            prototypeType = $('#id_prototypetype'),\n            preloadHdr = $('#id_answerpreloadhdr'),\n            typeName = $('#id_typename'),\n            courseId = $('input[name=\"courseid\"]').prop('value'),\n            questiontypeHelpDiv = $('#qtype-help'),\n            precheck = $('select#id_precheck'),\n            testtypedivs = $('div.testtype'),\n            missingPrototype = $('#id_missing_prototype'),\n            uiplugin = $('#id_uiplugin');\n\n        // Set up the UI controller for the textarea whose name is\n        // given as the first parameter (one of template, answer or answerpreload)\n        // to the given UI controller (which may be \"None\" or, equivalently, empty).\n        // We don't attempt to process changes in template parameters,\n        // as these need to be merged with those of the prototype. But we do handle\n        // changes in the language.\n        function setUi(taId, uiname) {\n            var ta = $(document.getElementById(taId)),  // The jquery text area element(s).\n                lang,\n                currentLang = ta.attr('data-lang'),     // Language set by PHP.\n                paramsJson = ta.attr('data-params'),    // Template params set by PHP.\n                params = {},\n                uiWrapper;\n\n            // Set data attributes in the text area for UI components that need\n            // global extra or testcase data (e.g. gapfiller UI).\n            ta.attr('data-globalextra', globalextra.val());\n            ta.attr('data-test0', $('#id_testcode_0').val());\n            try {\n                params = JSON.parse(paramsJson);\n            } catch(err) {}\n            uiname = uiname.toLowerCase();\n            if (uiname === 'none') {\n                uiname = '';\n            }\n\n            if (taId == 'id_templateparams') {\n                lang = '';\n            } else {\n                lang = language.prop('value');\n                if (taId !== \"id_template\" && acelang.prop('value')) {\n                    lang = preferredAceLang(acelang.prop('value'));\n                }\n            }\n\n            uiWrapper = ta.data('current-ui-wrapper'); // Currently-active UI wrapper on this ta.\n\n            if (uiWrapper && uiWrapper.uiname === uiname && currentLang == lang) {\n                return; // We already have what we want - give up.\n            }\n\n            ta.attr('data-lang', lang);\n\n            if (!uiWrapper) {\n                uiWrapper = new ui.InterfaceWrapper(uiname, taId);\n            } else {\n                // Wrapper has already been set up - just reload the reqd UI.\n                params.lang = lang;\n                uiWrapper.loadUi(uiname, params);\n            }\n\n        }\n\n        // Set the correct Ui controller on both the sample answer and the answer preload.\n        // As a special case, we don't turn on the Ui controller in the answer\n        // and answer preload fields when using Html-Ui\n        function setUis() {\n            var uiname = uiplugin.val();\n\n            if (uiname && uiname !== 'html') {\n                setUi('id_answer', uiname);\n                setUi('id_answerpreload', uiname);\n            }\n        }\n\n        // Display or Hide all customisation parts of the form according\n        // to whether isVisible is true or false respectively.\n        function setCustomisationVisibility(isVisible) {\n            var display = isVisible ? 'block' : 'none';\n            customisationFieldSet.css('display', display);\n            advancedCustomisation.css('display', display);\n            if (isVisible && useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n        // After loading the form with new question type data we have to\n        // enable or disable both the testsplitterre and the allow multiple\n        // stdins field. These are subsequently enabled/disabled via event handlers\n        // set up by code in edit_coderunner_form.php (q.v.) but those event\n        // handlers do not handle the freshly downloaded state.\n        function enableTemplateSupportFields() {\n            var isCombinatorEnabled = isCombinator.prop('checked');\n\n            testSplitterRe.prop('disabled', !isCombinatorEnabled);\n            allowMultipleStdins.prop('disabled', !isCombinatorEnabled);\n        }\n\n        // Copy fields from the AJAX \"get question type\" response into the form.\n        function copyFieldsFromQuestionType(newType, response) {\n            var formspecifier, attrval, filter;\n            for (var key in JSON_TO_FORM_MAP) {\n                formspecifier = JSON_TO_FORM_MAP[key];\n                attrval = response[key] ? response[key] : formspecifier[2];\n                if (formspecifier.length > 3) {\n                    filter = formspecifier[3];\n                    attrval = filter(attrval);\n                }\n                $(formspecifier[0]).prop(formspecifier[1], attrval);\n            }\n\n            typeName.prop('value', newType);\n            customise.prop('checked', false);\n            questiontypeHelpDiv.html(detailsHtml(newType, response.questiontext));\n            setCustomisationVisibility(false);\n            enableTemplateSupportFields();\n        }\n\n        // A JSON request for a question type returned a 'failure' response - probably a\n        // missing question type. Report the error with an alert, and replace\n        // the template contents with an error message in case the user\n        // saves the question and later wonders why it breaks.\n        function reportError(questionType, error) {\n            var errorMessage;\n            window.alert(getString('prototype_load_failure') + error);\n            errorMessage = getString('prototype_error') + \"\\n\";\n            errorMessage += error + '\\n';\n            errorMessage += \"CourseId: \" + courseId + \", qtype: \" + questionType;\n            template.prop('value', errorMessage);\n        }\n\n        function detailsHtml(title, html) {\n            // Local function to return the HTML to display in the\n            // question type details section of the form.\n            var resultHtml = '<p class=\"question-type-details-header\">';\n            resultHtml += getString('coderunner_question_type');\n            resultHtml += title + '</p>\\n' + html;\n            return resultHtml;\n\n        }\n\n        // Get the required string from the strings parameter.\n        function getString(key) {\n            return strings[key];\n        }\n\n        // Get the \"preferred language\" from the AceLang string supplied.\n        // For multilanguage questions, this is either the default (i.e.,\n        // the language with a '*' suffix), or the first language. Otherwise\n        // it is simply the entire AceLang string.\n        function preferredAceLang(acelang) {\n            var langs, i;\n            if (acelang.indexOf(',') < 0) {\n                return acelang;\n            } else {\n                langs = acelang.split(',');\n                for (i = 0; i < langs.length; i++) {\n                    if (langs[i].endsWith('*')) {\n                        return langs[i].substr(0, langs[i].length - 1);\n                    }\n                }\n                return langs.length > 0 ? langs[0] : '';\n            }\n        }\n\n        // Load the various customisation fields into the form from the\n        // CodeRunner question type currently selected by the combobox.\n        function loadCustomisationFields() {\n            var newType = typeCombo.children('option:selected').text();\n\n            if (newType !== '' && newType !== 'Undefined') {\n                // Prevent 'Undefined' ever being reselected.\n                typeCombo.children('option:first-child').prop('disabled', 'disabled');\n\n                // Load question type with ajax.\n                $.getJSON(M.cfg.wwwroot + '/question/type/coderunner/ajax.php',\n                    {\n                        qtype: newType,\n                        courseid: courseId,\n                        sesskey: M.cfg.sesskey\n                    },\n                    function (outcome) {\n                        if (outcome.success) {\n                            copyFieldsFromQuestionType(newType, outcome);\n                            setUis();\n                        }\n                        else {\n                            reportError(newType, outcome.error);\n                        }\n\n                    }\n                ).fail(function () {\n                    // AJAX failed. We're dead, Fred.\n                    window.alert(getString('error_loading_prototype'));\n                    template.prop('value', getString('ajax_error'));\n                });\n            }\n        }\n\n        // Show/hide all testtype divs in the testcases according to the\n        // 'Precheck' selector.\n        function set_testtype_visibilities() {\n            if (precheck.val() === '3') { // Show only for case of 'Selected'.\n                testtypedivs.show();\n            } else {\n                testtypedivs.hide();\n            }\n        }\n\n        // Check that the Ace language is correctly set for the answer and\n        // answer preload fields.\n        function check_ace_lang() {\n            if (uiplugin.val() === 'ace'){\n                setUis();\n            }\n        }\n\n        // Check that the Ace language is correctly set for the template,\n        // if template_uses_ace is checked.\n        function check_template_lang() {\n            if (useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n        // If the missingPrototype hidden element is not empty, insert the\n        // given message as an error at the top of the question.\n        function checkForMissingPrototype() {\n            var missingPrototypeMessage = missingPrototype.prop('value'),\n                messagePara = null;\n            if (missingPrototypeMessage !== '') {\n                messagePara = $('<p>' + missingPrototype.prop('value') + '</p>');\n                $('#id_qtype_coderunner_error_div').append(messagePara);\n            }\n        }\n\n        /*************************************************************\n         *\n         * Body of initEditFormWhenReady starts here.\n         *\n         *************************************************************/\n\n        if (prototypeType.prop('value') == 1) {\n            // Editing a built-in question type: Dangerous!\n            window.alert(getString('proceed_at_own_risk'));\n            prototypeType.prop('disabled', true);\n            typeCombo.prop('disabled', true);\n            customise.prop('disabled', true);\n        }\n\n        checkForMissingPrototype();\n\n        setCustomisationVisibility(isCustomised);\n        if (!isCustomised) {\n            // Not customised so have to load fields from prototype.\n            loadCustomisationFields();  // setUis is called when this completes.\n        } else {\n            setUis();  // Set up UI controllers on answer and answerpreload.\n            questiontypeHelpDiv.html(\"<p>\" + getString('info_unavailable') + \"</p>\");\n        }\n\n        set_testtype_visibilities();\n\n        if (useace.prop('checked')) {\n            setUi('id_templateparams', 'ace');\n        }\n\n        // Set up event Handlers.\n\n        customise.on('change', function() {\n            var isCustomised = customise.prop('checked');\n            if (isCustomised) {\n                // Customisation is being turned on.\n                setCustomisationVisibility(true);\n            } else { // Customisation being turned off.\n                if (window.confirm(getString('confirm_proceed'))) {\n                    setCustomisationVisibility(false);\n                } else {\n                    customise.prop('checked', true);\n                }\n            }\n        });\n\n        acelang.on('change', check_ace_lang);\n        language.on('change', function() {\n            check_template_lang();\n            check_ace_lang();\n        });\n\n        typeCombo.on('change', function() {\n            if (!customise.prop('checked') ||\n                    window.confirm(getString('question_type_changed'))) {\n                loadCustomisationFields();\n            }\n        });\n\n        useace.on('change', function() {\n            var isTurningOn = useace.prop('checked');\n            if (isTurningOn) {\n                setUi('id_template', 'ace');\n                setUi('id_templateparams', 'ace');\n            } else {\n                setUi('id_template', '');\n                setUi('id_templateparams', '');\n            }\n        });\n\n        uiplugin.on('change', setUis);\n\n        precheck.on('change', set_testtype_visibilities);\n\n        // In order to initialise the Ui plugin when the answer preload section is\n        // expanded, we monitor attribute mutations in the Answer Preload\n        // header.\n        var observer = new MutationObserver( function () {\n            setUis();\n        });\n        observer.observe(preloadHdr.get(0), {'attributes': true});\n\n        // Setup click handler for the buttons that allow users to replace the\n        // expected output  with the output got from testing the answer program.\n        $('button.replaceexpectedwithgot').click(function() {\n            var gotPre = $(this).prev('pre[id^=\"id_got_\"]');\n            var testCaseId = gotPre.attr('id').replace('id_got_', '');\n            $('#id_expected_' + testCaseId).val(gotPre.text());\n            $('#id_fail_expected_' + testCaseId).html(gotPre.text());\n            $('.failrow_' + testCaseId).addClass('fixed');  // Fixed row.\n            $(this).prop('disabled', true);\n        });\n    }\n\n    return {initEditForm: initEditForm};\n});"],"file":"authorform.min.js"}